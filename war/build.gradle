// ~/war/build.gradle
plugins {
    id 'war'
    id 'java'
    id 'org.gretty' version '4.0.3'
}

// Inside war/build.gradle
// tasks.named('compileJava').configure {
//     dependsOn(':ejb:compileJava')
// }

repositories {
    mavenCentral()
    gradlePluginPortal()
}

dependencies {
    compileOnly project(':ejb')
    // Add Java Faker for generating fake data
    implementation 'net.datafaker:datafaker:2.1.0'
    //jstl
    implementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api:3.0.0'
    compileOnly 'org.apache.tomcat.embed:tomcat-embed-core:9.0.41'
    compileOnly 'org.apache.tomcat.embed:tomcat-embed-jasper:9.0.41'
    compileOnly 'jakarta.servlet:jakarta.servlet-api:4.0.4'
    compileOnly 'jakarta.persistence:jakarta.persistence-api:3.0.0'
    compileOnly 'jakarta.ejb:jakarta.ejb-api:4.0.0'
    compileOnly 'jakarta.transaction:jakarta.transaction-api:2.0.0'
    compileOnly 'jakarta.annotation:jakarta.annotation-api:1.3.5'
    compileOnly 'jakarta.validation:jakarta.validation-api:2.0.2'
    compileOnly 'jakarta.platform:jakarta.jakartaee-web-api:9.1.0'
}
//
// war {
//     webAppDirectory = file('src/main/webapp')
// }

// war {
//     // // Include the EJB jar in the WEB-INF/lib directory of the WAR
//     // WAR plugin configuration
//     // webXml = file('src/main/webapp/WEB-INF/web.xml') // Specify location of web.xml
//     // Include additional files or configurations if necessary}
//     from('../ejb/src/main/java') { // Include your entity classes in the WAR
//         include 'com/epda/model/**'
//     }
// }

gretty {
    httpPort = 8000
    contextPath = '/'
}


sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDir 'src/main/resources'
        }
    }
}
